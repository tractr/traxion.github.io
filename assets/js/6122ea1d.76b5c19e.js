"use strict";(self.webpackChunkstack=self.webpackChunkstack||[]).push([[7518],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,g=d["".concat(s,".").concat(f)]||d[f]||c[f]||r;return n?o.createElement(g,i(i({ref:t},p),{},{components:n})):o.createElement(g,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8124:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),i=["components"],l={id:"upload-a-file-to-aws-s3",title:"Upload a file to AWS S3",sidebar_label:"Upload a file to AWS S3"},s=void 0,u={unversionedId:"how-to/angular/use-cases/upload-a-file-to-aws-s3",id:"how-to/angular/use-cases/upload-a-file-to-aws-s3",title:"Upload a file to AWS S3",description:"Package's author: Maxim Darr\xe9",source:"@site/docs/how-to/angular/use-cases/upload-a-file-to-aws-s3.md",sourceDirName:"how-to/angular/use-cases",slug:"/how-to/angular/use-cases/upload-a-file-to-aws-s3",permalink:"/traxion.github.io/docs/how-to/angular/use-cases/upload-a-file-to-aws-s3",draft:!1,editUrl:"https://github.com/tractr/stack/tree/main/apps/docs/docs/how-to/angular/use-cases/upload-a-file-to-aws-s3.md",tags:[],version:"current",frontMatter:{id:"upload-a-file-to-aws-s3",title:"Upload a file to AWS S3",sidebar_label:"Upload a file to AWS S3"},sidebar:"documentation",previous:{title:"Create a user profile page",permalink:"/traxion.github.io/docs/how-to/angular/use-cases/create-a-user-profile-page"},next:{title:"Troubleshooting",permalink:"/traxion.github.io/docs/how-to/angular/troubleshooting/"}},p={},c=[{value:"Installation",id:"installation",level:2},{value:"Synchronous configuration",id:"synchronous-configuration",level:3},{value:"Example",id:"example",level:4},{value:"Asynchronous configuration",id:"asynchronous-configuration",level:3},{value:"Description",id:"description",level:2}],d={toc:c};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Package's author: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/maxmousse"},"Maxim Darr\xe9"))),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"To install the package, run ",(0,r.kt)("inlineCode",{parentName:"p"},"npm i --save @tractr/angular-file-storage"),"."),(0,r.kt)("p",null,"Then, to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"FileStorageService")," in your application, you must import the ",(0,r.kt)("inlineCode",{parentName:"p"},"FileStorageModule")," in the module that needs the ",(0,r.kt)("inlineCode",{parentName:"p"},"FileStorageService"),"."),(0,r.kt)("p",null,"Please note that you should register the module and provide an adequate configuration."),(0,r.kt)("h3",{id:"synchronous-configuration"},"Synchronous configuration"),(0,r.kt)("p",null,"You can call the ",(0,r.kt)("inlineCode",{parentName:"p"},"register")," method with the module configuration."),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"app.module.ts")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Module } from '@nestjs/common';\n\nimport {\n  FileStorageController,\n  FileStorageModule,\n  PresignedDownloadConfiguration,\n  PresignedUploadConfiguration,\n} from '@tractr/nestjs-file-storage';\n\n@Module({\n  imports: [\n    FileStorageModule.registerAsync({\n      useFactory: (defaultConfig) => ({\n        ...defaultConfig,\n        accessKey: 'minio',\n        secretKey: 'password',\n        endPoint: 'localhost',\n        port: 9000,\n        useSSL: false,\n        defaultBucket: 'bucket',\n        presignedDownload: {} as PresignedDownloadConfiguration,\n        presignedUpload: {} as PresignedUploadConfiguration,\n      }),\n    }),\n  ],\n  controllers: [FileStorageController],\n})\nexport class AppModule {}\n")),(0,r.kt)("h3",{id:"asynchronous-configuration"},"Asynchronous configuration"),(0,r.kt)("p",null,"You can call the ",(0,r.kt)("inlineCode",{parentName:"p"},"registerAsync")," method with the module configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Module } from '@nestjs/common';\n\nimport {\n  FileStorageController,\n  FileStorageModule,\n  PresignedDownloadConfiguration,\n  PresignedUploadConfiguration,\n} from '@tractr/nestjs-file-storage';\n\n@Module({\n  imports: [\n    FileStorageModule.registerAsync({\n      useFactory: (defaultConfig) => ({\n        ...defaultConfig,\n        accessKey: 'minio',\n        secretKey: 'password',\n        endPoint: 'localhost',\n        port: 9000,\n        useSSL: false,\n        defaultBucket: 'bucket',\n        presignedDownload: {} as PresignedDownloadConfiguration,\n        presignedUpload: {} as PresignedUploadConfiguration,\n      }),\n    }),\n  ],\n  controllers: [FileStorageController],\n})\nexport class AppModule {}\n")),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("admonition",{title:"Coming soon",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This page is under construction."),(0,r.kt)("p",{parentName:"admonition"},"Join our ",(0,r.kt)("a",{parentName:"p",href:"https://discord.traxion.dev/"},"Discord")," server to get notified when it's ready.")))}f.isMDXComponent=!0}}]);