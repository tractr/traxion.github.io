"use strict";(self.webpackChunkstack=self.webpackChunkstack||[]).push([[185],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),o=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},m=function(e){var t=o(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=o(a),u=n,g=c["".concat(p,".").concat(u)]||c[u]||d[u]||i;return a?r.createElement(g,s(s({ref:t},m),{},{components:a})):r.createElement(g,s({ref:t},m))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,s=new Array(i);s[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var o=2;o<i;o++)s[o]=a[o];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},6200:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>l,contentTitle:()=>p,metadata:()=>o,toc:()=>m,default:()=>c});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),s=["components"],l={id:"prisma",title:"Get started - Prisma",sidebar_label:"Prisma"},p=void 0,o={unversionedId:"get-started/step-by-step/prisma",id:"get-started/step-by-step/prisma",title:"Get started - Prisma",description:"Install Prisma",source:"@site/docs/get-started/step-by-step/prisma.md",sourceDirName:"get-started/step-by-step",slug:"/get-started/step-by-step/prisma",permalink:"/docs/get-started/step-by-step/prisma",editUrl:"https://github.com/tractr/stack/tree/main/apps/docs/docs/get-started/step-by-step/prisma.md",tags:[],version:"current",frontMatter:{id:"prisma",title:"Get started - Prisma",sidebar_label:"Prisma"},sidebar:"documentation",previous:{title:"ESLint",permalink:"/docs/get-started/step-by-step/eslint"},next:{title:"Generated Libraries",permalink:"/docs/get-started/step-by-step/generated-libs"}},m=[{value:"Install Prisma",id:"install-prisma",children:[],level:2},{value:"Create prisma library",id:"create-prisma-library",children:[],level:2},{value:"Add Hapify templates",id:"add-hapify-templates",children:[],level:2},{value:"Add the generate command",id:"add-the-generate-command",children:[],level:2},{value:"Create some models with Hapify",id:"create-some-models-with-hapify",children:[],level:2},{value:"Create schema for prisma",id:"create-schema-for-prisma",children:[],level:2},{value:"Ignore paths",id:"ignore-paths",children:[],level:2},{value:"Cleanup",id:"cleanup",children:[],level:2}],d={toc:m};function c(e){var t=e.components,a=(0,n.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"install-prisma"},"Install Prisma"),(0,i.kt)("p",null,"Install prisma packages by running the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm i -D prisma prisma-merge\n")),(0,i.kt)("h2",{id:"create-prisma-library"},"Create prisma library"),(0,i.kt)("p",null,"Create prisma library in the workspace with this command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"nx generate @nrwl/node:library --name prisma\n")),(0,i.kt)("p",null,"This will generate a new library in folder ",(0,i.kt)("inlineCode",{parentName:"p"},"libs/prisma"),"."),(0,i.kt)("h2",{id:"add-hapify-templates"},"Add Hapify templates"),(0,i.kt)("p",null,"Then you should install the packages containing the required Hapify templates:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm i -D -f @tractr/hapify-templates-prisma\n")),(0,i.kt)("p",null,"Add the Hapify config to the Prisma library, in ",(0,i.kt)("inlineCode",{parentName:"p"},"libs/prisma/.hapifyrc.js"),"."),(0,i.kt)("h2",{id:"add-the-generate-command"},"Add the generate command"),(0,i.kt)("p",null,"Edit ",(0,i.kt)("inlineCode",{parentName:"p"},"libs/prisma/project.json")," file to add the ",(0,i.kt)("inlineCode",{parentName:"p"},"generate")," target to the prisma configuration (under ",(0,i.kt)("inlineCode",{parentName:"p"},"targets"),").:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"lines",lines:!0},'"generate": {\n  "executor": "@nrwl/workspace:run-commands",\n  "options": {\n    "commands": [\n      "npx rimraf generated",\n      "node ../../node_modules/.bin/hpf-generate-config",\n      {\n        "command": "npx hpf generate",\n        "forwardAllArgs": false\n      },\n      {\n        "command": "npx prisma-merge --baseFile=prisma/schemas/base.prisma --schemaFilePatterns=prisma/**/*.prisma --outputFile=prisma/schema.prisma --excludedFilePattern=prisma/**/schema.prisma",\n        "forwardAllArgs": false\n      },\n      {\n        "command": "npx prisma format",\n        "forwardAllArgs": false\n      },\n      {\n        "command": "npx prisma generate",\n        "forwardAllArgs": false\n      }\n    ],\n    "cwd": "libs/prisma",\n    "parallel": false\n  }\n},\n')),(0,i.kt)("p",null,"In ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),", add the ",(0,i.kt)("inlineCode",{parentName:"p"},"generate")," script (under ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts"),"):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"lines",lines:!0},'"generate": "npx nx run-many --target generate --all"\n')),(0,i.kt)("h2",{id:"create-some-models-with-hapify"},"Create some models with Hapify"),(0,i.kt)("p",null,"Create a file named ",(0,i.kt)("inlineCode",{parentName:"p"},"hapify-models.json")," at the project root with contents:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "version": "3",\n  "name": "Project models",\n  "models": []\n}\n')),(0,i.kt)("p",null,"Create some models using the Hapify GUI: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"hpf serve\n")),(0,i.kt)("h2",{id:"create-schema-for-prisma"},"Create schema for prisma"),(0,i.kt)("p",null,"In the Prisma library ",(0,i.kt)("inlineCode",{parentName:"p"},"libs/prisma"),", add a base schema for Prisma (with datasource and generator config).\nIt must be located in ",(0,i.kt)("inlineCode",{parentName:"p"},"libs/prisma/prisma/schemas/base.prisma"),"."),(0,i.kt)("p",null,"Now, you should be able to run the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm run generate\n")),(0,i.kt)("p",null,"It should generate a file ",(0,i.kt)("inlineCode",{parentName:"p"},"libs/prisma/prisma/schema.prisma")," in the Prisma library."),(0,i.kt)("h2",{id:"ignore-paths"},"Ignore paths"),(0,i.kt)("p",null,"Add these lines to the ",(0,i.kt)("inlineCode",{parentName:"p"},".gitignore")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ignore"},"**/prisma/dev.db\n**/prisma/schemas/generated.prisma\n**/prisma/schema.prisma\n")),(0,i.kt)("h2",{id:"cleanup"},"Cleanup"),(0,i.kt)("p",null,"Remove the TS path of the Prisma library in ",(0,i.kt)("inlineCode",{parentName:"p"},"tsconfig.base.json")," as it won't be used."))}c.isMDXComponent=!0}}]);