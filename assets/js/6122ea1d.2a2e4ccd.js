"use strict";(self.webpackChunk_trxn_traxion_api=self.webpackChunk_trxn_traxion_api||[]).push([[7518],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),u=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return o.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(t),f=r,g=c["".concat(s,".").concat(f)]||c[f]||d[f]||a;return t?o.createElement(g,i(i({ref:n},p),{},{components:t})):o.createElement(g,i({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=t[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1053:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),i=["components"],l={id:"upload-a-file-to-aws-s3",title:"Upload a file to AWS S3",sidebar_label:"Upload a file to AWS S3"},s=void 0,u={unversionedId:"how-to/angular/use-cases/upload-a-file-to-aws-s3",id:"how-to/angular/use-cases/upload-a-file-to-aws-s3",title:"Upload a file to AWS S3",description:"Package's author: Maxim Darr\xe9",source:"@site/docs/how-to/angular/use-cases/upload-a-file-to-aws-s3.md",sourceDirName:"how-to/angular/use-cases",slug:"/how-to/angular/use-cases/upload-a-file-to-aws-s3",permalink:"/traxion.github.io/docs/how-to/angular/use-cases/upload-a-file-to-aws-s3",draft:!1,editUrl:"https://github.com/tractr/traxion/tree/main/apps/docs/docs/how-to/angular/use-cases/upload-a-file-to-aws-s3.md",tags:[],version:"current",frontMatter:{id:"upload-a-file-to-aws-s3",title:"Upload a file to AWS S3",sidebar_label:"Upload a file to AWS S3"},sidebar:"documentation",previous:{title:"Create a user profile page",permalink:"/traxion.github.io/docs/how-to/angular/use-cases/create-a-user-profile-page"},next:{title:"Troubleshooting",permalink:"/traxion.github.io/docs/how-to/angular/troubleshooting/"}},p={},c=[{value:"Installation",id:"installation",level:2},{value:"Synchronous configuration",id:"synchronous-configuration",level:3},{value:"Example",id:"example",level:4},{value:"Asynchronous configuration",id:"asynchronous-configuration",level:3},{value:"Description",id:"description",level:2}],d={toc:c};function f(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Package's author: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/maxmousse"},"Maxim Darr\xe9"))),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"To install the package, run ",(0,a.kt)("inlineCode",{parentName:"p"},"npm i --save @trxn/angular-file-storage"),"."),(0,a.kt)("p",null,"Then, to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"FileStorageService")," in your application, you must import the ",(0,a.kt)("inlineCode",{parentName:"p"},"FileStorageModule")," in the module that needs the ",(0,a.kt)("inlineCode",{parentName:"p"},"FileStorageService"),"."),(0,a.kt)("p",null,"Please note that you should register the module and provide an adequate configuration."),(0,a.kt)("h3",{id:"synchronous-configuration"},"Synchronous configuration"),(0,a.kt)("p",null,"You can call the ",(0,a.kt)("inlineCode",{parentName:"p"},"register")," method with the module configuration."),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"app.module.ts")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Module } from '@nestjs/common';\n\nimport {\n  FileStorageController,\n  FileStorageModule,\n  PresignedDownloadConfiguration,\n  PresignedUploadConfiguration,\n} from '@trxn/nestjs-file-storage';\n\n@Module({\n  imports: [\n    FileStorageModule.registerAsync({\n      useFactory: (defaultConfig) => ({\n        ...defaultConfig,\n        accessKey: 'minio',\n        secretKey: 'password',\n        endPoint: 'localhost',\n        port: 9000,\n        useSSL: false,\n        defaultBucket: 'bucket',\n        presignedDownload: {} as PresignedDownloadConfiguration,\n        presignedUpload: {} as PresignedUploadConfiguration,\n      }),\n    }),\n  ],\n  controllers: [FileStorageController],\n})\nexport class AppModule {}\n")),(0,a.kt)("h3",{id:"asynchronous-configuration"},"Asynchronous configuration"),(0,a.kt)("p",null,"You can call the ",(0,a.kt)("inlineCode",{parentName:"p"},"registerAsync")," method with the module configuration."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Module } from '@nestjs/common';\n\nimport {\n  FileStorageController,\n  FileStorageModule,\n  PresignedDownloadConfiguration,\n  PresignedUploadConfiguration,\n} from '@trxn/nestjs-file-storage';\n\n@Module({\n  imports: [\n    FileStorageModule.registerAsync({\n      useFactory: (defaultConfig) => ({\n        ...defaultConfig,\n        accessKey: 'minio',\n        secretKey: 'password',\n        endPoint: 'localhost',\n        port: 9000,\n        useSSL: false,\n        defaultBucket: 'bucket',\n        presignedDownload: {} as PresignedDownloadConfiguration,\n        presignedUpload: {} as PresignedUploadConfiguration,\n      }),\n    }),\n  ],\n  controllers: [FileStorageController],\n})\nexport class AppModule {}\n")),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("admonition",{title:"Coming soon",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This page is under construction."),(0,a.kt)("p",{parentName:"admonition"},"Join our ",(0,a.kt)("a",{parentName:"p",href:"https://discord.traxion.dev/"},"Discord")," server to get notified when it's ready.")))}f.isMDXComponent=!0}}]);