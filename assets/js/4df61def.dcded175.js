"use strict";(self.webpackChunkstack=self.webpackChunkstack||[]).push([[173],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var l=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=l.createContext({}),c=function(e){var t=l.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return l.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),u=r,k=d["".concat(o,".").concat(u)]||d[u]||m[u]||i;return n?l.createElement(k,a(a({ref:t},p),{},{components:n})):l.createElement(k,a({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return l.createElement.apply(null,a)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1737:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>s,contentTitle:()=>o,metadata:()=>c,toc:()=>p,default:()=>d});var l=n(7462),r=n(3366),i=(n(7294),n(3905)),a=["components"],s={id:"commitlint-husky",title:"Get started - Commitlint and Husky",sidebar_label:"Commitlint and Husky"},o=void 0,c={unversionedId:"get-started/step-by-step/commitlint-husky",id:"get-started/step-by-step/commitlint-husky",title:"Get started - Commitlint and Husky",description:"Commitlint installation",source:"@site/docs/get-started/step-by-step/commitlint-husky.md",sourceDirName:"get-started/step-by-step",slug:"/get-started/step-by-step/commitlint-husky",permalink:"/docs/get-started/step-by-step/commitlint-husky",editUrl:"https://github.com/tractr/stack/tree/main/apps/docs/docs/get-started/step-by-step/commitlint-husky.md",tags:[],version:"current",frontMatter:{id:"commitlint-husky",title:"Get started - Commitlint and Husky",sidebar_label:"Commitlint and Husky"},sidebar:"documentation",previous:{title:"Generated Libraries",permalink:"/docs/get-started/step-by-step/generated-libs"},next:{title:"Github Actions",permalink:"/docs/get-started/step-by-step/github-actions"}},p=[{value:"Commitlint installation",id:"commitlint-installation",children:[{value:"Create file <code>.commitlintrc.js</code>",id:"create-file-commitlintrcjs",children:[],level:3},{value:"Create file <code>.czrc</code>",id:"create-file-czrc",children:[],level:3},{value:"Create file <code>.lintstagedrc</code>",id:"create-file-lintstagedrc",children:[],level:3}],level:2},{value:"Husky installation",id:"husky-installation",children:[{value:"Create Husky hooks",id:"create-husky-hooks",children:[],level:3},{value:"Install Husky hooks",id:"install-husky-hooks",children:[],level:3}],level:2}],m={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,l.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"commitlint-installation"},"Commitlint installation"),(0,i.kt)("p",null,"Install the dependencies with the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm i -D @commitlint/cli @commitlint/config-conventional commitizen cz-conventional-changelog\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm i -D -f @tractr/commit-config\n")),(0,i.kt)("h3",{id:"create-file-commitlintrcjs"},"Create file ",(0,i.kt)("inlineCode",{parentName:"h3"},".commitlintrc.js")),(0,i.kt)("p",null,"Use the following content: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"module.exports = {\n  extends: ['@tractr/commit-config'],\n};\n")),(0,i.kt)("h3",{id:"create-file-czrc"},"Create file ",(0,i.kt)("inlineCode",{parentName:"h3"},".czrc")),(0,i.kt)("p",null,"Use the following content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "path": "cz-conventional-changelog"\n}\n')),(0,i.kt)("h3",{id:"create-file-lintstagedrc"},"Create file ",(0,i.kt)("inlineCode",{parentName:"h3"},".lintstagedrc")),(0,i.kt)("p",null,"Use the following content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "*.{js,jsx,ts,tsx,md,html,css,json}": "prettier --write",\n  "*.{js,jsx,ts,tsx,html,json}": "eslint --fix"\n}\n')),(0,i.kt)("h2",{id:"husky-installation"},"Husky installation"),(0,i.kt)("p",null,"Install dependencies with the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm i -D husky is-ci\n")),(0,i.kt)("h3",{id:"create-husky-hooks"},"Create Husky hooks"),(0,i.kt)("p",null,"Create a directory ",(0,i.kt)("inlineCode",{parentName:"p"},".husky"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir -p .husky\n")),(0,i.kt)("p",null,"In this ",(0,i.kt)("inlineCode",{parentName:"p"},".husky")," folder, add the following files:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},".gitignore")," with content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ignore"},"_\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"commit-msg")," with content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'#!/bin/sh\n\n# shellcheck disable=SC1091\n. "$(dirname "$0")/_/husky.sh"\n\nnpm_config_yes=true npx tractr-commitlint --edit "$1"\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"pre-commit")," with content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'#!/bin/sh\n\n# shellcheck disable=SC1091\n. "$(dirname "$0")/_/husky.sh"\n\nnpm_config_yes=true npx lint-staged\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"prepare-commit-msg")," with content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'#!/bin/sh\n\n# shellcheck disable=SC1091\n. "$(dirname "$0")/_/husky.sh"\n\nif [ -z ${2+x} ]\nthen\n    # shellcheck disable=SC2015\n    exec < /dev/tty && npm_config_yes=true npx tractr-commit --hook || true\nfi\n')),(0,i.kt)("h3",{id:"install-husky-hooks"},"Install Husky hooks"),(0,i.kt)("p",null,"In ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),", add (or replace) the ",(0,i.kt)("inlineCode",{parentName:"p"},"postinstall")," script (under ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts"),"):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"lines",lines:!0},'"postinstall": "(is-ci || husky install) && ngcc --properties es2015 browser module main"\n')))}d.isMDXComponent=!0}}]);